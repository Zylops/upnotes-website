{"version":3,"sources":["components/Footer.js","components/Header.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","style","background","className","href","headersData","label","target","useStyles","makeStyles","header","paddingRight","paddingLeft","logo","fontFamily","fontWeight","color","textAlign","menuButton","size","marginLeft","toolbar","display","justifyContent","drawerContainer","padding","imageIcon","height","width","alignSelf","iconRoot","headerBrand","flexDirection","alignItems","Header","useState","mobileView","drawerOpen","state","setState","useEffect","setResponsiveness","window","innerWidth","prevState","addEventListener","getDrawerChoices","map","textDecoration","key","upnotesLogo","Icon","src","alt","Typography","variant","component","getMenuButtons","AppBar","Toolbar","IconButton","edge","onClick","Drawer","anchor","open","onClose","Home","tag","setTag","downloadHref","setDownloadHref","getWindowsHref","getLinuxHref","getMacHref","a","fetch","response","json","tags","name","substr","navigator","appVersion","indexOf","getTag","WebkitBackgroundClip","WebkitTextFillColor","icon","endsWith","faWindows","faLinux","faApple","id","margin","App","React","ReactGA","initialize","debug","pageview","location","pathname","search","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a081ecc.chunk.js","sourcesContent":["import React from 'react';\n\nconst Footer = function(){\n    return <footer style={{background: 'coral'}} className=\"w3-container w3-padding-64 w3-center w3-opacity\">\n      <div className=\"w3-xlarge w3-padding-32\">\n        <i className=\"fa fa-facebook-official w3-hover-opacity\"></i>\n        <i className=\"fa fa-instagram w3-hover-opacity\"></i>\n        <i className=\"fa fa-snapchat w3-hover-opacity\"></i>\n        <i className=\"fa fa-pinterest-p w3-hover-opacity\"></i>\n        <i className=\"fa fa-twitter w3-hover-opacity\"></i>\n        <i className=\"fa fa-linkedin w3-hover-opacity\"></i>\n     </div>\n     <p><a href=\"https://upnotes.io\"> upnotes.io </a></p>\n    </footer>\n}\n\n\nexport default Footer;","import {\n  AppBar,\n  Toolbar,\n  Typography,\n  makeStyles,\n  // Button,\n  IconButton,\n  Drawer,\n  // MenuItem,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport React, { useState, useEffect } from \"react\";\nimport Icon from \"@material-ui/core/Icon\";\nconst headersData = [\n  {\n    label: \"Join Chat\",\n    href: \"https://discord.gg/ATZTMeyWsW\",\n    target: \"_blank\",\n  },\n  {\n    label: \"Report Issue\",\n    href: \"https://github.com/upnotes-io/upnotes-website/issues/new\",\n    target: \"_blank\",\n  },\n  // {\n  //   label: \"Blogs\",\n  //   href: \"/blog\",\n  //   target: \"none\",\n  // },\n  {\n    label: \"Download\",\n    href: \"#download\",\n    target: \"_blank\",\n  },\n];\n\nconst useStyles = makeStyles(() => ({\n  header: {\n    background: '#f9b296',\n    paddingRight: \"79px\",\n    paddingLeft: \"79px\",\n    \"@media (max-width: 900px)\": {\n      paddingLeft: 0,\n    },\n  },\n  logo: {\n    fontFamily: \"Work Sans, sans-serif\",\n    fontWeight: 600,\n    color: \"black\",\n    textAlign: \"left\",\n  },\n  menuButton: {\n    fontFamily: \"Open Sans, sans-serif\",\n    fontWeight: 700,\n    size: \"18px\",\n    marginLeft: \"38px\",\n    color: \"black\",\n  },\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  drawerContainer: {\n    padding: \"20px 30px\",\n  },\n  imageIcon: {\n    display: \"flex\",\n    height: \"inherit\",\n    width: \"inherit\",\n    alignSelf: \"center\",\n  },\n  iconRoot: {\n    textAlign: \"center\",\n    height: \"36px\",\n    width: \"36px\",\n  },\n  headerBrand: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n}));\n\nexport default function Header() {\n  const {\n    header,\n    logo,\n    menuButton,\n    toolbar,\n    drawerContainer,\n    iconRoot,\n    imageIcon,\n    headerBrand,\n  } = useStyles();\n\n  const [state, setState] = useState({\n    mobileView: false,\n    drawerOpen: false,\n  });\n\n  const { mobileView, drawerOpen } = state;\n\n  useEffect(() => {\n    const setResponsiveness = () => {\n      return window.innerWidth < 900\n        ? setState((prevState) => ({ ...prevState, mobileView: true }))\n        : setState((prevState) => ({ ...prevState, mobileView: false }));\n    };\n\n    setResponsiveness();\n\n    window.addEventListener(\"resize\", () => setResponsiveness());\n  }, []);\n\n  const displayDesktop = () => {\n    return (\n      <Toolbar className={toolbar}>\n        {upnotesLogo}\n        <div>{getMenuButtons()}</div>\n      </Toolbar>\n    );\n  };\n\n  const displayMobile = () => {\n    const handleDrawerOpen = () =>\n      setState((prevState) => ({ ...prevState, drawerOpen: true }));\n    const handleDrawerClose = () =>\n      setState((prevState) => ({ ...prevState, drawerOpen: false }));\n\n    return (\n      <Toolbar>\n        <IconButton\n          {...{\n            edge: \"start\",\n            color: \"inherit\",\n            \"aria-label\": \"menu\",\n            \"aria-haspopup\": \"true\",\n            onClick: handleDrawerOpen,\n          }}\n        >\n          <MenuIcon />\n        </IconButton>\n\n        <Drawer\n          {...{\n            anchor: \"left\",\n            open: drawerOpen,\n            onClose: handleDrawerClose,\n          }}\n        >\n          <div className={drawerContainer}>{getDrawerChoices()}</div>\n        </Drawer>\n\n        <div>{upnotesLogo}</div>\n      </Toolbar>\n    );\n  };\n\n  const getDrawerChoices = () => {\n    return headersData.map(({ label, href, target }) => {\n      return (\n        <a\n          {...{\n            href: href,\n            color: \"inherit\",\n            style: { textDecoration: \"none\" },\n            key: label,\n            target,\n          }}\n        >\n          {label}\n        </a>\n      );\n    });\n  };\n\n  const upnotesLogo = (\n    <a href={'/'} className={headerBrand}>\n      <Icon className={iconRoot}>\n        <img className={imageIcon} src=\"/assets/icon.svg\" alt=\"logo\" />\n      </Icon>\n      <Typography variant=\"h6\" component=\"h1\" className={logo}>\n        Upnotes\n      </Typography>\n    </a>\n  );\n\n  const getMenuButtons = () => {\n    return headersData.map(({ label, href, target }) => {\n      return (\n        <a\n          {...{\n            key: label,\n            color: \"inherit\",\n            href: href,\n            target,\n            className: menuButton,\n          }}\n        >\n          {label}\n        </a>\n      );\n    });\n  };\n\n  return (\n    <header>\n      <AppBar className={header}>\n        {mobileView ? displayMobile() : displayDesktop()}\n      </AppBar>\n    </header>\n  );\n}\n","import React, {useEffect, useState} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faWindows, faApple, faLinux} from '@fortawesome/free-brands-svg-icons';\n\nexport default function Home() {\n  let [tag, setTag] = useState(null);\n\n  let [downloadHref, setDownloadHref] = useState(\"#download\");\n  function getOSIcon() {\n    if (downloadHref.endsWith(\".exe\")) {\n      return faWindows;\n    } else if (downloadHref.endsWith(\".AppImage\")) {\n      return faLinux;\n    } else {\n      return faApple;\n    }\n  }\n  function getWindowsHref(tag) {\n    return `https://github.com/upnotes-io/upnotes-website/releases/download/v${tag}/Upnotes-${tag}.exe`;\n  }\n\n  function getLinuxHref(tag) {\n    return `https://github.com/upnotes-io/upnotes-website/releases/download/v${tag}/Upnotes-${tag}.AppImage`;\n  }\n\n  function getMacHref(tag) {\n    return `https://github.com/upnotes-io/upnotes-website/releases/download/v${tag}/Upnotes-${tag}.dmg`;\n  }\n  useEffect(() => {\n    const getTag = async () => {\n      // https://docs.github.com/en/rest/reference/repos#list-repository-tags\n      const response = await fetch('https://api.github.com/repos/upnotes-io/upnotes-website/tags');\n      const tags = await response.json(); //extract JSON from the http response\n      setTag(tags[0].name.substr(1)); // Ex: v1.0.3-beta but download link require without v.\n      if (navigator.appVersion.indexOf(\"Win\") !== -1) setDownloadHref(getWindowsHref(tag));\n      if (navigator.appVersion.indexOf(\"Mac\") !== -1) setDownloadHref(getMacHref(tag));\n      if (navigator.appVersion.indexOf(\"X11\") !== -1) setDownloadHref(getLinuxHref(tag));\n      if (navigator.appVersion.indexOf(\"Linux\") !== -1) setDownloadHref(getLinuxHref(tag));\n    }\n    getTag();\n  }, [tag]);\n\n\n\n  return (\n    <div className=\"content\">\n      <div\n        className=\"w3-container w3-center\"\n        style={{ padding: '128px 16px'}}\n      >\n        <h1 className=\"w3-margin w3-jumbo\"  style={{\n          background: '-webkit-linear-gradient(#eb543b, #fbd51c)',\n          WebkitBackgroundClip: 'text',\n          WebkitTextFillColor: 'transparent',\n        }}>Upnotes</h1>\n        <h2 className=\"w3-xlarge\" style={{color: 'black'}}>Automatically organize your software engineering notes.</h2>\n        <a href={downloadHref} className=\"w3-button w3-text-black w3-padding-large w3-large w3-margin-top\">\n          <FontAwesomeIcon icon={getOSIcon()} />\n          <span> Download </span>\n        </a>\n      </div>\n      <div className=\"w3-row-padding w3-padding-64 w3-container\">\n        <div className=\"w3-content\">\n\n            <h5 >\n              Features\n            </h5>\n            <p className=\"w3-text-black\">\n              <li> Automatically create notes based on your git branch</li>\n              <li> Simple and powerful markdown editor with markdown and wysiwyg and split mode support </li>\n              <li> Syntax highlight with support for most of the programming languages </li>\n              <li> Git managed notes with all the notes automatically organized and saved in github flavored markdown format. </li>\n              <li> Directories are organized based on day to day workflow for software engineer </li>\n            </p>\n\n        </div>\n      </div>\n\n\n      <div id={'download'} style={{'max-width': '1024px', margin: 'auto'}} className=\"w3-row-padding w3-padding-64 w3-container\">\n        {tag == null ? <div><p>Getting latest version...</p></div> :\n            <div>\n              <div style={{ display: 'flex',\n                'flex-direction': 'row',\n                'justify-content': 'space-between',\n                'max-width': '1024px',\n                'margin': 'auto',\n                'font-size': 'xx-large',\n              }}>\n                <div><a href={getWindowsHref()}><FontAwesomeIcon icon={faWindows} /> <span>Windows</span></a></div>\n                <div><a href={getLinuxHref()}><FontAwesomeIcon icon={faLinux} /> <span>Linux</span></a></div>\n                <div><a href={getMacHref()}><FontAwesomeIcon icon={faApple} /> <span>Mac</span></a></div>\n              </div>\n            </div>\n        }\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport './App.css';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport Home from './pages/Home';\nimport ReactGA from 'react-ga';\n\nfunction App() {\n  React.useEffect(()=>{\n    ReactGA.initialize('UA-196765342-1', {debug: true});\n    ReactGA.pageview(window.location.pathname + window.location.search);\n  })\n\n  return (\n    <>\n      <Header/>\n        <Home /> \n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}